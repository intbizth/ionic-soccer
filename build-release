#!/bin/bash

if [ ! -d "$ANDROID_HOME" ]; then
    echo "the path \$ANDROID_HOME not found"
    exit
fi

if ! which jarsigner >/dev/null; then
    echo "jarsigner not installed."
    exit
fi

if ! which zipalign >/dev/null; then
    echo "zipalign not installed."
    exit
fi

appname=`sed -n 's:.*<name>\(.*\)</name>.*:\1:p' config.xml`

rm -rf www/lib/*
bower install
ionic plugin remove cordova-plugin-console
gulp remove && gulp build --env=prod
ionic build ios --release && ionic build android --release

key="src/key/${appname}.keystore"
if [ -f "${key}" ]; then
    armv7_apk="platforms/android/build/outputs/apk/android-armv7-release-unsigned.apk"
    x86_apk="platforms/android/build/outputs/apk/android-x86-release-unsigned.apk"
    armv7_output_apk="platforms/android/build/outputs/apk/${appname}-armv7.apk"
    x86_output_apk="platforms/android/build/outputs/apk/${appname}-x86.apk"

    jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "${key}" "${armv7_apk}" Soccer
    jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "${key}" "${x86_apk}" Soccer

    if [ -f "${armv7_output_apk}" ]; then
        rm "${armv7_output_apk}"
    fi

    if [ -f "${x86_output_apk}" ]; then
        rm "${x86_output_apk}"
    fi

    zipalign -v 4 "${armv7_apk}" "${armv7_output_apk}"
    zipalign -v 4 "${x86_apk}" "${x86_output_apk}"
fi
